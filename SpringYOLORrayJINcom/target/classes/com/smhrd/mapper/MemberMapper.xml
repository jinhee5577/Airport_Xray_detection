<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.smhrd.mapper.MemberMapper">

   <select id="getMember" parameterType="String" resultType="com.smhrd.entity.Member">
      select * from member where memId = #{memId}
   </select>
   
   <!-- 모든 유저정보 불러옴. -->
   <select id="getuserAll" resultType="com.smhrd.entity.Member">
      SELECT * FROM MEMBER ORDER BY JOINED_AT DESC
   </select>
   
   <!-- DB model내용 모두 가져오기. -->
   <select id="getModelList" resultType="com.smhrd.entity.MODEL">
      SELECT * FROM MODEL ORDER BY MODEL_AT DESC
   </select>
   
   <!-- DB MODEL테이블에 새로운 내용 insert. -->
   <insert id="insertModel" parameterType="com.smhrd.entity.ReceiveModel">
      INSERT INTO MODEL (MODEL_NAME, MODEL_DETAIL, MODEL_FILE) 
      values(#{modelNAME}, #{modelDETAIL}, #{modelFILE})
   </insert>
   
   <!-- 카카오로그인으로 가져온data DB insert기능. -->
   <insert id="insertKakaodata" parameterType="com.smhrd.entity.KakaoUserInfoResponseDto">
      INSERT INTO MEMBER (IDENTIFI_ID, MEMBER_NAME) 
      values(#{modelNAME}, #{modelDETAIL}, #{modelFILE})
   </insert>

   <!-- 로그인 실패 and COMPANY테이블에 정보 추가. -->
   <insert id="insertCompanyNum" parameterType="String">
      INSERT INTO COMPANY (IDENTIFI_ID) values(#{companyNum})
   </insert>
   
   <!-- 로그인 기능 -->
   <select id="login" parameterType="String" resultType="com.smhrd.entity.Company">
      select * from COMPANY where IDENTIFI_ID=#{IDENTIFI_ID}
   </select>
   
   
   <!-- Member 테이블에서 유전 권한검사하기위해 권한 가져오기. -->
   <select id="getUserAuth" parameterType="String" resultType="com.smhrd.entity.Member">
      select MEMBER_AUTH from MEMBER where IDENTIFI_ID=#{IDENTIFI_ID}
   </select>
   
   <!-- member테이블에 저장된 정보없으면 추가함. -->
   <insert id="insertMemberNum" parameterType="String">
      INSERT INTO MEMBER (IDENTIFI_ID) values(#{IDENTIFI_ID})
   </insert>
   
   <!-- 해당 유저권한 업데이트기능. -->
   <update id="userAuthUpdate" parameterType="com.smhrd.entity.Auth">
      UPDATE MEMBER SET MEMBER_AUTH=#{memberAUTH} WHERE IDENTIFI_ID=#{identifiID}
   </update>
   
   
   <!-- 회원관리 페이지에서 db status 상태 true로 바꿈. -->
   <update id="userstatusTrue" parameterType="String">
      UPDATE MEMBER SET MEMBER_STATUS='TRUE' WHERE IDENTIFI_ID=#{Identifi_ID}
   </update>
   
   <!-- 회원관리 페이지에서 db status 상태 FALSE로 바꿈. -->
   <update id="userstatusFalse" parameterType="String">
      UPDATE MEMBER SET MEMBER_STATUS='FALSE' WHERE IDENTIFI_ID=#{Identifi_ID}
   </update>
   
   
   
   

</mapper>


